<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Development/Backend/Database/MySQL on</title><link>chick26.github.io/tags/Development/Backend/Database/MySQL/</link><description>Recent content in Development/Backend/Database/MySQL on</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="chick26.github.io/tags/Development/Backend/Database/MySQL/index.xml" rel="self" type="application/rss+xml"/><item><title>InnoDB存储引擎</title><link>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/InnoDB%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/InnoDB%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/</guid><description>up:: [ Sources/Courses/⚙️ Database/MySQL/• TOC for MySQL Course|• TOC for MySQL Course
InnoDB 存储引擎 有助于 Oracle、达梦、MongoDB
存储结构 数据库都是通过逻辑存储结构管理物理存储结构</description></item><item><title>InnoDB存储引擎</title><link>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/InnoDB%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/InnoDB%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/</guid><description>up:: [ Sources/Courses/⚙️ Database/MySQL/• TOC for MySQL Course|• TOC for MySQL Course
InnoDB 存储引擎 有助于 Oracle、达梦、MongoDB
存储结构 数据库都是通过逻辑存储结构管理物理存储结构</description></item><item><title>MySQL数据库基础</title><link>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/</guid><description>up:: [ Sources/Courses/⚙️ Database/MySQL/• TOC for MySQL Course|• TOC for MySQL Course
虚拟机使用说明 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 [root@mysql8 ~]# tree tools/ tools/ ├── backup 备份和恢复工具 │ ├── binlog2sql.</description></item><item><title>主从复制和主主复制</title><link>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%92%8C%E4%B8%BB%E4%B8%BB%E5%A4%8D%E5%88%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%92%8C%E4%B8%BB%E4%B8%BB%E5%A4%8D%E5%88%B6/</guid><description>up:: [ Sources/Courses/⚙️ Database/MySQL/• TOC for MySQL Course|• TOC for MySQL Course
主从复制 主从复制（也称 AB 复制）允许将来自一个 MySQL 数据库服务器（主服务器）的数据复制到一个或多个 MySQL 数据库服务器（从服务器）。根据参数文件的配置，可以复制数据库中的所有数据库，所选数据库甚至选定的表。</description></item><item><title>事务与锁</title><link>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E4%BA%8B%E5%8A%A1%E4%B8%8E%E9%94%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E4%BA%8B%E5%8A%A1%E4%B8%8E%E9%94%81/</guid><description>up:: [ Sources/Courses/⚙️ Database/MySQL/• TOC for MySQL Course|• TOC for MySQL Course
MySQL的事务 MySQL 支持三种不同的存储引擎：MyISAM 存储引擎、Memory 存储引擎和 InnoDB 存储引擎，但只有 InnoDB 存储引擎才支持事务。</description></item><item><title>备份与恢复</title><link>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/</guid><description>up:: [ Sources/Courses/⚙️ Database/MySQL/• TOC for MySQL Course|• TOC for MySQL Course
基本的术语 备份与恢复方式 MySQL 的备份方法可以根据不同的方式进行划分。例如，根据备份的方法可以划分为物理备份和逻辑备份；根据备份手段、备份的数据范围及备份时数据服务是否在线等来划分，如: 根据备份的数据集的范围可以划分为全量备份、增量备份和差异备份；根据备份时数据服务是否在线可以划分为热备份和冷备份。
逻辑备份：表中的数据 物理备份：备份时直接复制备份这些数据库的文件 冷备份：一致性备份、脱机备份（需要停机） 热备份：不一致性备份、联机备份（不需要停机） 全量备份：备份数据库结构和文件结构 增量备份：仅备份自上一次完全备份或增量备份之后所增加的数据内容 工具使用 Mydumper 热备份 mydumper，MySQL 在备份方面包含了自身的 mysqldump 工具，但其只支持单线程工作，这就使得它无法迅速的备份数据。而 mydumper 作为一个实用工具，能够良好支持多线程工作，这使得它在处理速度方面十倍于传统的 mysqldump。</description></item><item><title>应用程序开发</title><link>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/</guid><description>up:: [ Sources/Courses/⚙️ Database/MySQL/• TOC for MySQL Course|• TOC for MySQL Course
存储过程 procedure 打印Hello World 1 2 3 4 5 6 7 8 9 10 set@result=&amp;#34;&amp;#34;;delimiter$$createproceduresayHelloWorld()beginselect&amp;#34;Hello World&amp;#34;into@result;end$$delimiter; 基于员工表（emp）, 创建存储过程raiseSalaryByEmpno，为指定的员工涨10%的工资，并输出涨前和涨后的薪水。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 set@beforeRaise=0;set@afterRaise=0;delimiter$$createprocedureraiseSalaryByEmpno(inenoint)begin-- 查询员工涨前的薪水 selectsalinto@beforeRaisefromempwhereempno=eno;-- 给员工涨工资 updateempsetsal=sal*1.</description></item><item><title>应用程序开发</title><link>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/</guid><description>up:: [ Sources/Courses/⚙️ Database/MySQL/• TOC for MySQL Course|• TOC for MySQL Course
存储过程 procedure 打印Hello World 1 2 3 4 5 6 7 8 9 10 set@result=&amp;#34;&amp;#34;;delimiter$$createproceduresayHelloWorld()beginselect&amp;#34;Hello World&amp;#34;into@result;end$$delimiter; 基于员工表（emp）, 创建存储过程raiseSalaryByEmpno，为指定的员工涨10%的工资，并输出涨前和涨后的薪水。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 set@beforeRaise=0;set@afterRaise=0;delimiter$$createprocedureraiseSalaryByEmpno(inenoint)begin-- 查询员工涨前的薪水 selectsalinto@beforeRaisefromempwhereempno=eno;-- 给员工涨工资 updateempsetsal=sal*1.</description></item><item><title>性能优化与运维管理</title><link>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B8%8E%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B8%8E%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/</guid><description>up:: [ Sources/Courses/⚙️ Database/MySQL/• TOC for MySQL Course|• TOC for MySQL Course
MySQL 的性能优化需要以基准测试为基础，并且主要针对查询语句进行性能分析。在分析的过程中可以借助一系列工具来针对 SQL 的执行计划和资源消费的情况，并最终给出 SQL 的建议指导。
基准测试 baseline MySQL 数据库基准测试时的关键指标包括以下 3 个方面：</description></item><item><title>数据库对象</title><link>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%B9%E8%B1%A1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%B9%E8%B1%A1/</guid><description>up:: [ Sources/Courses/⚙️ Database/MySQL/• TOC for MySQL Course|• TOC for MySQL Course
表 数据类型 数值类型 MySQL 支持所有标准 SQL 数值数据类型。这些类型包括严格数值数据类型(INTEGER、 SMALLINT、DECIMAL 和 NUMERIC)，以及近似数值数据类型(FLOAT、REAL 和 DOUBLE PRECISION)</description></item><item><title>数据库对象</title><link>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%B9%E8%B1%A1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%B9%E8%B1%A1/</guid><description>up:: [ Sources/Courses/⚙️ Database/MySQL/• TOC for MySQL Course|• TOC for MySQL Course
表 数据类型 数值类型 MySQL 支持所有标准 SQL 数值数据类型。这些类型包括严格数值数据类型(INTEGER、 SMALLINT、DECIMAL 和 NUMERIC)，以及近似数值数据类型(FLOAT、REAL 和 DOUBLE PRECISION)</description></item><item><title>数据库的中间件</title><link>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%AD%E9%97%B4%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%AD%E9%97%B4%E4%BB%B6/</guid><description>up:: [ Sources/Courses/⚙️ Database/MySQL/• TOC for MySQL Course|• TOC for MySQL Course
MySQL 数据库使用过程中会通过搭建主从复制的架构来提高性能，同时采用分库分表的模式来解决读写分离的问题。MySQL 数据库的中间件就是为了更好地使 MySQL 支持这些应用的场景。主流的 MySQL 数据库中间件有 ProxySQL、 Mycat、Atlas 和 Cobar 等等。</description></item><item><title>数据库的监控</title><link>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E7%9B%91%E6%8E%A7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E7%9B%91%E6%8E%A7/</guid><description>up:: [ Sources/Courses/⚙️ Database/MySQL/• TOC for MySQL Course|• TOC for MySQL Course
监控指标 可用性指标 是否可以通过网络连接 1 mysqladmin -uroot -p ping 数据库的最大连接数 1 2 3 4 5 6 7 showvariableslike&amp;#39;max_connections&amp;#39;;+-----------------+-------+|Variable_name|Value|+-----------------+-------+|max_connections|151|+-----------------+-------+ 当前 MySQL 打开的连接数 1 2 3 4 5 6 7 showglobalstatuslike&amp;#39;Threads_connected&amp;#39;;+-------------------+-------+|Variable_name|Value|+-------------------+-------+|Threads_connected|1|+-------------------+-------+ 性能指标 指标名称 指标说明 QPS MySQL 每秒处理的请求数量 TPS MySQL 每秒处理的事务数量 并发数 MySQL 实例当前并行处理的会话数量 连接数 连接到 MySQL 数据库会话的数量 缓存命中率 查询命中缓存的百分比 [!</description></item><item><title>用户管理与访问控制</title><link>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E4%B8%8E%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E4%B8%8E%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/</guid><description>up:: [ Sources/Courses/⚙️ Database/MySQL/• TOC for MySQL Course|• TOC for MySQL Course
用户的管理 系统表：mysql.user
1 2 3 4 5 6 7 8 9 10 11 mysql&amp;gt; select user from mysql.</description></item><item><title>用户管理与访问控制</title><link>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E4%B8%8E%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E4%B8%8E%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/</guid><description>up:: [ Sources/Courses/⚙️ Database/MySQL/• TOC for MySQL Course|• TOC for MySQL Course
用户的管理 系统表：mysql.user
1 2 3 4 5 6 7 8 9 10 11 mysql&amp;gt; select user from mysql.</description></item><item><title>高可用架构</title><link>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>chick26.github.io/Sources/Courses/%EF%B8%8F-Database/MySQL/%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84/</guid><description>up:: [ Sources/Courses/⚙️ Database/MySQL/• TOC for MySQL Course|• TOC for MySQL Course
MySQL 的主从复制是一种主从式的架构。由于整个架构中只存在一个主节点 master，当它发了宕机或者出现问题的时候势 必影响整个集群的正常工作。因此需要基于高可用的架构来解决 MySQL 主从复制的单点故障问题。
高可用架构的核心就是对主节点 master 进行监控，当其出现故障的时候通过提升某一从节点为新的主节点，从而实现故障的自动转移。</description></item></channel></rss>