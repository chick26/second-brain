<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development/Frontend/HTML/FormValidation on </title>
    <link>chick26.github.io/tags/development/frontend/html/formvalidation/</link>
    <description>Recent content in Development/Frontend/HTML/FormValidation on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language><atom:link href="chick26.github.io/tags/development/frontend/html/formvalidation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HTML-Validation</title>
      <link>chick26.github.io/cards/-front-dev/html/html-validation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>chick26.github.io/cards/-front-dev/html/html-validation/</guid>
      <description>up:: [ • TOC for Frontend
不同类型的表单数据校验 在 Web 中，你可能会遇见各种不同的表单校验：
客户端校验 发生在浏览器端，表单数据被提交到服务器之前，这种方式相较于服务器端校验来说，用户体验更好，它能实时的反馈用户的输入校验结果，这种类型的校验可以进一步细分成下面这些方式：
 JavaScript 校验，这是可以完全自定义的实现方式； HTML5 内置校验，这不需要 JavaScript ，而且性能更好，但是不能像JavaScript那样可自定义。  服务器端校验 发生在浏览器提交数据并被服务器端程序接收之后 —— 通常服务器端校验都是发生在将数据写入数据库之前，如果数据没通过校验，则会直接从服务器端返回错误消息，并且告诉浏览器端发生错误的具体位置和原因，服务器端校验不像客户端校验那样有好的用户体验，因为它直到整个表单都提交后才能返回错误信息。但是服务器端校验是你的应用对抗错误/恶意数据的最后防线，在这之后，数据将被持久化至数据库。当今 所有的服务端框架都提供了数据校验与清洁功能（让数据更安全）。</description>
    </item>
    
  </channel>
</rss>
